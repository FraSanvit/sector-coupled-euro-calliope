overrides:
    heat_techs_2030:
        tech_groups:
            heat_storage_small:  # [Danish energy agency, energy storage, 142 small scale hot water tank, 2030]
                constraints:
                    energy_cap_per_storage_cap_max: 6.67  # 20kW/3kWh
                    storage_loss: 0.021  # frac/hour
                    lifetime: 30
                costs:
                    monetary:
                        storage_cap: {{ 0.41e6 * scaling_factors.specific_costs }}  # {{ (1 / scaling_factors.specific_costs) | unit("EUR2015/MWh_heat") }}


            heat_storage_big:  # [Danish energy agency, energy storage, 141 large scale hot water tank, 2030]
                constraints:
                    energy_cap_per_storage_cap_max: 0.0166 # 2MW/175MWh
                    storage_loss: 0.01e-2  # 0.2%/day -> 0.01%/hour
                    lifetime: 40
                costs:
                    monetary:
                        storage_cap: {{ 0.003e6 * scaling_factors.specific_costs }}  # {{ (1 / scaling_factors.specific_costs) | unit("EUR2015/MWh_heat") }}

        techs:
            methane_boiler:
                costs:  # [Danish energy agency, heating installations, 202 Natural gas boiler, 2030]
                    monetary:
                        energy_cap: {{ mean([3.0 / 10, 3.0 / 10, 23.4 / 400, 16.7 / 160]) * 1e6 * scaling_factors.specific_costs }}  # {{ (1 / scaling_factors.specific_costs) | unit("EUR2015/MW_heat") }} | data given per 'unit', so the equation divides each unit cost by the unit capacity; average of new/existing and SF/MF homes; TODO: modify per region based on dwelling ratio
                        om_annual: {{ mean([0.186 / 10, 0.186 / 10, 0.590 / 400, 0.394 / 160]) * 1e6 * scaling_factors.specific_costs }}  # {{ (1 / scaling_factors.specific_costs) | unit("EUR2015/MW_heat/year") }} | average of new/existing and SFH/MFH; TODO: modify per region based on dwelling ratio

            biofuel_boiler:
                constraints:
                    lifetime: 20
                costs:  # [Danish energy agency, heating installations, 204 Biomass boiler automatic, 2030]
                    monetary:
                        energy_cap: {{ mean([6.5 / 10, 6.5 / 8, 83 / 400, 50 / 160]) * 1e6 * scaling_factors.specific_costs }}  # {{ (1 / scaling_factors.specific_costs) | unit("EUR2015/MW_heat") }} | average of new/existing and SFH/MFH; TODO: modify per region based on dwelling ratio
                        om_annual: {{ mean([0.464 / 10, 0.464 / 10, 1.484 / 400, 0.983 / 160]) * 1e6 * scaling_factors.specific_costs }}  # {{ (1 / scaling_factors.specific_costs) | unit("EUR2015/MW_heat/year") }} | average of new/existing and SFH/MFH; TODO: modify per region based on dwelling ratio

            ashp:
                costs:  # [Danish energy agency, heating installations, 207.3-6 Air to water, 2030]
                    monetary:
                        energy_cap: {{ mean([8.5 / 10, 6 / 4, 127 / 400, 63 / 160]) * 1e6 * scaling_factors.specific_costs }}  # {{ (1 / scaling_factors.specific_costs) | unit("EUR2015/MW_heat") }} | average of new/existing and SFH/MFH; TODO: modify per region based on dwelling ratio
                        om_annual: {{ mean([0.245 / 10, 0.245 / 4, 0.846 / 400, 0.846 / 160]) * 1e6 * scaling_factors.specific_costs }}  # {{ (1 / scaling_factors.specific_costs) | unit("EUR2015/MW_heat/year") }} | average of new/existing and SFH/MFH; TODO: modify per region based on dwelling ratio

            gshp:
                costs:  # [Danish energy agency, heating installations, 207.7-10 Ground source, 2030]
                    monetary:
                        energy_cap: {{ mean([14 / 10, 10 / 4, 224 / 400, 80 / 160]) * 1e6 * scaling_factors.specific_costs }}  # {{ (1 / scaling_factors.specific_costs) | unit("EUR2015/MW_heat") }} | average of new/existing and SFH/MFH; TODO: modify per region based on dwelling ratio
                        om_annual: {{ mean([0.245 / 10, 0.245 / 4, 0.846 / 400, 0.846 / 160]) * 1e6 * scaling_factors.specific_costs }}  # {{ (1 / scaling_factors.specific_costs) | unit("EUR2015/MW_heat/year") }} | average of new/existing and SFH/MFH; TODO: modify per region based on dwelling ratio

            hp:  # combination of gshp and ashp
                costs:  # [Danish energy agency, heating installations, 207.3-6 Air to water & 207.7-10 Ground source, 2030]
                    monetary:
                        energy_cap: {{ (mean([8.5 / 10, 6 / 4, 127 / 400, 63 / 160]) * heat.heat_pump_ratio.ashp + mean([14 / 10, 10 / 4, 224 / 400, 80 / 160]) * heat.heat_pump_ratio.gshp) * 1e6 * scaling_factors.specific_costs }}  # {{ (1 / scaling_factors.specific_costs) | unit("EUR2015/MW_heat") }} | average of new/existing and SFH/MFH, weighted by number of installed ; TODO: modify per region based on dwelling ratio
                        om_annual: {{ (mean([0.245 / 10, 0.245 / 4, 0.846 / 400, 0.846 / 160]) * heat.heat_pump_ratio.ashp + mean([0.245 / 10, 0.245 / 4, 0.846 / 400, 0.846 / 160]) * heat.heat_pump_ratio.gshp) * 1e6 * scaling_factors.specific_costs }}  # {{ (1 / scaling_factors.specific_costs) | unit("EUR2015/MW_heat/year") }} | average of new/existing and SFH/MFH, weighted by number of installed GSHP vs ASHP; TODO: modify per region based on dwelling ratio

            # TODO: update these techs with new tech_groups when solar thermal is working
            solar_thermal_collector:  # [Danish energy agency, heating installations, 215 Solar heating, 2030]
                constraints:
                    # energy_eff: 1  # modelled in the "solar_thermal_energy" tech
                    lifetime: 30
                    resource_area_per_energy_cap: {{ mean([6 / 4.2, 200 / 140]) * scaling_factors.area / scaling_factors.power }}  # {{ (scaling_factors.power / scaling_factors.area) | unit("km^2/MW") }}
                costs:
                    monetary:
                        energy_cap: {{ mean([3.4 / 4.2, 2.7 / 4.2, 2.1 / 4.2, 74 / 140, 67 / 140]) * 1e6 * scaling_factors.specific_costs }}  # {{ (1 / scaling_factors.specific_costs) | unit("EUR2015/MW_heat") }} | average of new/existing and SFH/MFH; TODO: modify per region based on dwelling ratio
                        om_annual: {{ mean([0.056 / 4.2, 0.056 / 4.2, 0.056 / 4.2, 0.165 / 140, 0.185 / 140]) * 1e6 * scaling_factors.specific_costs }}  # {{ (1 / scaling_factors.specific_costs) | unit("EUR2015/MW_heat/year") }} | average of new/existing and SFH/MFH; TODO: modify per region based on dwelling ratio

            electric_heater:  # [Danish energy agency, heating installations, 216 Electric heating, 2030]
                costs:
                    monetary:
                        energy_cap: {{ mean([2.8 / 3, 98 / 160]) * 1e6 * scaling_factors.specific_costs }}  # {{ (1 / scaling_factors.specific_costs) | unit("EUR2015/MW_heat") }} | average of new/existing and SFH/MFH; TODO: modify per region based on dwelling ratio
                        om_annual: {{ mean([0.023 / 3, 0.046 / 160]) * 1e6 * scaling_factors.specific_costs }}  # {{ (1 / scaling_factors.specific_costs) | unit("EUR2015/MW_heat/year") }} | average of new/existing and SFH/MFH; TODO: modify per region based on dwelling ratio

            chp_biofuel_extraction:  # [Danish energy agency, electricity and district heating, 09 biofuel extraction plant, 2030]
                constraints:
                    energy_eff: {{ mean([0.41, 0.426]) }}  # average of  chips/pellets
                    cb: {{ mean([0.42, 0.59]) }}  # back-pressure ratio, average of  chips/pellets
                    cv: {{ mean([0.14, 0.17]) }}  # (electricity_cap - electricity_prod) / (heat_prod), average of  chips/pellets
                    lifetime: 25
                costs:
                    monetary:
                        energy_cap: {{ mean([2.4, 2.04]) * 1e6 * scaling_factors.specific_costs }}  # {{ (1 / scaling_factors.specific_costs) | unit("EUR2015/MW_electricity") }} | average of chips/pellets
                        om_annual: {{ mean([0.062, 0.052]) * 1e6 * scaling_factors.specific_costs }}  # {{ (1 / scaling_factors.specific_costs) | unit("EUR2015/MW_electricity/year") }} | average of chips/pellets
                        om_prod: {{ mean([2.6, 1.1]) * scaling_factors.specific_costs }} # {{ (1 / scaling_factors.specific_costs) | unit("EUR2015/MWh_electricity") }} | average of chips/pellets

            chp_methane_extraction:  # [Danish energy agency, electricity and district heating, 05 Gas turb. CC, steam extraction, 2030]
                constraints:
                    energy_eff: 0.58
                    cb: 2  # back-pressure ratio
                    cv: 0.15  # (electricity_cap - electricity_prod) / (heat_prod)
                    lifetime: 25
                costs:
                    monetary:
                        energy_cap: {{ 0.83e6 * scaling_factors.specific_costs }}  # {{ (1 / scaling_factors.specific_costs) | unit("EUR2015/MW_electricity") }}
                        om_annual: {{ 0.0278e6 * scaling_factors.specific_costs }}  # {{ (1 / scaling_factors.specific_costs) | unit("EUR2015/MW_electricity/year") }}
                        om_prod: {{ 4.2 * scaling_factors.specific_costs }} # {{ (1 / scaling_factors.specific_costs) | unit("EUR2015/MWh_electricity") }}

            chp_wte_back_pressure:  # [Danish energy agency, electricity and district heating, 08 WtE CHP, Large, 50 degree, 2030]
                constraints:
                    energy_eff: 0.208  # annual average
                    cb: 0.29  # back-pressure ratio
                    cv: 1  # (electricity_cap - electricity_prod) / (heat_prod)
                    lifetime: 25
                costs:
                    monetary:
                        energy_cap: {{ 8.1e6 * scaling_factors.specific_costs }}  # {{ (1 / scaling_factors.specific_costs) | unit("EUR2015/MW_electricity") }}
                        om_annual: {{ 0.191e6 * scaling_factors.specific_costs }}  # {{ (1 / scaling_factors.specific_costs) | unit("EUR2015/MW_electricity/year") }}
                        om_prod: {{ 26.5 * scaling_factors.specific_costs }} # {{ (1 / scaling_factors.specific_costs) | unit("EUR2015/MWh_electricity") }}
