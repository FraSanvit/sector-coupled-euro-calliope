data-sources:
    fuel-costs: https://heatroadmap.eu/wp-content/uploads/2020/01/HRE_D6.1_Appendix_1.xlsx
    emissions-targets: data/emissions.csv
    industry-demand-scale: data/demand_scaling/industry_subsector_scales.csv
    building-electricity-demand-scale: data/demand_scaling/building_electricity_scales.csv
    annual-demand-scale: data/demand_scaling/annual_demand_scales.csv
    eurostat-energy-balance: "https://raw.githubusercontent.com/calliope-project/euro-calliope-datasets/feature-sector-coupling/eurostat/nrg_bal_c.tsv.gz"
    eurostat-hh-end-use:  "https://raw.githubusercontent.com/calliope-project/euro-calliope-datasets/feature-sector-coupling/eurostat/nrg_d_hhq.tsv.gz"
    ch-end-use: "https://www.bfe.admin.ch/bfe/en/home/versorgung/statistik-und-geodaten/energiestatistiken/energieverbrauch-nach-verwendungszweck.exturl.html/aHR0cHM6Ly9wdWJkYi5iZmUuYWRtaW4uY2gvZGUvcHVibGljYX/Rpb24vZG93bmxvYWQvOTg1NA==.html"
    ch-energy-balance: "https://www.bfe.admin.ch/bfe/en/home/versorgung/statistik-und-geodaten/energiestatistiken/gesamtenergiestatistik.exturl.html/aHR0cHM6Ly9wdWJkYi5iZmUuYWRtaW4uY2gvZGUvcHVibGljYX/Rpb24vZG93bmxvYWQvNzUxOQ==.html"
    ch-industry-energy-balance: "https://www.bfe.admin.ch/bfe/en/home/versorgung/statistik-und-geodaten/energiestatistiken/teilstatistiken.exturl.html/aHR0cHM6Ly9wdWJkYi5iZmUuYWRtaW4uY2gvZGUvcHVibGljYX/Rpb24vZG93bmxvYWQvODc4OA==.html"
    eurostat-dwellings: "https://raw.githubusercontent.com/calliope-project/euro-calliope-datasets/feature-sector-coupling/eurostat/cens_11dwob_r3.tsv.gz"
    when2heat: "https://github.com/oruhnau/when2heat.git"
    eurostat-freight: "https://raw.githubusercontent.com/calliope-project/euro-calliope-datasets/feature-sector-coupling/eurostat/road_go_na_rl3g.tsv.gz"
    eurostat-employees: "https://raw.githubusercontent.com/calliope-project/euro-calliope-datasets/feature-sector-coupling/eurostat/sbs_r_nuts06_r2.tsv.gz"
    eurostat-gva: "https://raw.githubusercontent.com/calliope-project/euro-calliope-datasets/feature-sector-coupling/eurostat/nama_10r_3gva.tsv.gz"
    ch-gva: "https://www.bfs.admin.ch/bfsstatic/dam/assets/10647597/master"
    gas-storage: "https://raw.githubusercontent.com/calliope-project/euro-calliope-datasets/feature-sector-coupling/gas_storage/gas_storage.xlsx"
    ramp-data: "https://zenodo.org/record/6579421/files/ramp-{ramp_profile}-profiles.csv.gz?download=1"
    weather: "https://zenodo.org/record/6557643/files/{filename}?download=1"
    population: https://ec.europa.eu/eurostat/cache/GISCO/geodatafiles/JRC_GRID_2018.zip

scaling-factors:
    power: 0.00001 # from MW to 100 GW
    area: 0.0001 # from km to 10000 km2
    monetary: 0.000000001  # from EUR to 1000 Mio EUR
    distance: 1
    energy: 10 # from TW(h) to 100 GW(h)
    transport: 0.01  # from Mio km to 100 Mio km
    co2: 0.0001  # from t to 10 kt
    co2_cost:  0.000001  # from t to Mt
scale-demands: false
demand-scale-scenario: "current"
cluster-sync:
    url: euler
    send-ignore: .syncignore-send
    receive-ignore: .syncignore-receive
    cluster-base-dir: ~/Develop/euro-spores/
    local-results-dir: build/cluster
parameters:
    fossil-fuel-cost:
        source: "JRC ref"
    roof-share: # from (Trondle:2019)
        E: 0.1660
        N: 0.1817
        S: 0.1821
        W: 0.1681
        flat: 0.3020
    transmission-costs:
        ac-ohl: 175000  # median, Eur/MW
        ac-ohl-mountain: 516000  # median, Eur/MW
        dc-ohl: 600000  # median, Eur/MW
        dc-underground: 755000  # median, Eur/MW
        dc-subsea: 942000  # median, Eur/MW
    transport:
        efficiency:  # MWh / mio km 25th percentile efficiency of all countries in 2015 [JRC_IDEES]
            hdv:
                diesel: 5140
                electricity: 3248  # based on buses
            ldv:
                diesel: 855
                electricity: 480
            motorcycle:
                diesel: 419
                electricity: 200  # based on passenger car electrical efficiency scaled by relative diesel efficiency
            bus:
                diesel: 6057
                electricity: 3248
            passenger_car:
                diesel: 675
                electricity: 324
        ev_battery_capacity:  # MWh
            hdv: 0.2  # average from [EUCAR_2019]
            ldv: 0.1  # own assumption based on passenger cars from [EUCAR_2019]
            motorcycle: 0.01  # own assumption
            bus: 0.2  # own assumption based on HDVs from [EUCAR_2019]
            passenger_car: 0.08  # average from [EUCAR_2019]
        group:
            hdv: heavy
            ldv: light
            motorcycle: light
            bus: heavy
            passenger_car: light
        monthly_demand:
            min: 0.9
            max: 1.1
            equals: 1
    industry:
        carriers: [diesel, kerosene, methanol, methane, biofuel, coal]  # choice of [diesel, kerosene, methane, methanol, co2, hydrogen, biofuel, coal], everything else will be incorporated into industry electricity demand. [coal, biofuel] are only relevant to the 2030 projection year. They have no electrification option, so removing them from this list will remove the energy from the system entirely.
        electrification_efficiency:  # see transformation-techs.yaml
            co2: 5000000.0  # tCO2/TWhe
            diesel: 0.5  # TWh_diesel/TWhe
            kerosene: 0.5  # TWh_kerosene/TWhe
            methane: 0.54  # TWh_methane/TWhe
            methanol: 0.47 # TWh_methanol/TWhe
            hydrogen: 0.66  # TWh_H2/TWhe
    heat-end-use:
        carriers: heat  # also could be [space-heat, water-heat]
        space_heat_techs:
            carnot_performance: 0.36  # [Nouvel_2015]
            gas_eff: 0.97  # [DEA_2016], but 70-80% according to [Qu_2014]
            oil_eff: 0.9  # [DEA_2016], but 0.63 according to [martin_2014]
            solid_fossil_eff: 0.8 # Assume same as biofuel
            biofuel_eff: 0.8  # [mermoud_2015] [Chandrasekaran_2013] [DEA_2016]
            solar_thermal_eff: 1  # Eurostat energy balances method
            electricity_eff: 1  # must be 1 for the time being (we assume 1 -> 1 electricity -> heat conversion)
            space_heat_temp: 36  # degrees C [Nouvel_2015]
            hp_cop: 3.5
        water_heat_techs:
            gas_eff: 0.97  # [DEA_2016], but 70-80% according to [Qu_2014]
            oil_eff: 0.9  # [DEA_2016], but 0.63 according to [martin_2014]
            solid_fossil_eff: 0.8 # Assume same as biofuel
            biofuel_eff: 0.8  # [mermoud_2015] [Chandrasekaran_2013] [DEA_2016]
            solar_thermal_eff: 1  # Eurostat energy balances method
            electricity_eff: 1  # must be 1 for the time being (we assume 1 -> 1 electricity -> heat conversion)
            water_heat_temp: 52  # degrees C [Nouvel_2015]
            hp_cop: 3.5
        cooking_techs:
            gas_eff: 0.28  # [Karunanithy_2016]
            oil_eff: 0.28  # [Karunanithy_2016] assuming oil == gas efficiency
            solid_fossil_eff: 0.15 # [Ramanathan_1994] scaled down 60%, based on values calculated by [Karunanithy_2016]
            biofuel_eff: 0.1 #  [Ramanathan_1994] scaled down 60%, based on values calculated by [Karunanithy_2016]
            electricity_eff: 0.5  # [Karunanithy_2016] based on 2/3 40% efficient direct electric, 1/3 70% efficient induction
        process_heating_techs:  # everything is 1 for now
            gas_eff: 1  #
            electricity_eff: 1  # must be 1 for the time being (we assume 1 -> 1 electricity -> heat conversion)
        temperature-threshold: 15.5  # for HDD, degrees C
        heating_temperature:
            underfloor: 35
            radiator_large: 50
            radiator_conventional: 65
            water: 60
        heat_sink_ratio:  # what ratio of buildings have different heat sink technologies
            underfloor: 0.1  # pure assumption
            radiator_large: 0.15  # pure assumption
            radiator_conventional: 0.75  # pure assumption
        heat_pump_ratio:  # see https://www.ehpa.org/fileadmin/red/07._Market_Data/2018/2018-05-06_Heat_Pumps_in_Europe_2019.pdf and https://www.ehpa.org/fileadmin/red/07._Market_Data/Heat_Pumps_in_Europe_2017.pdf
            ashp: 0.91
            gshp: 0.09

calliope-parameters: # arbitrary many calliope parameters applied as override
    model.subset_time: ['year-01-01', 'year-12-31']
plot-year: 2018
projection_year: 2050
